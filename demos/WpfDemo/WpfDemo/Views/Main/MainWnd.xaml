<Window x:Class="WpfDemo.Views.Main.MainWnd"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfDemo.Views.Main"
        xmlns:validation="clr-namespace:devoft.ClientModel.Validation;assembly=devoft.ClientModel"
        mc:Ignorable="d"
        Title="devoft WPF demo" Height="450" Width="800">
    <Window.CommandBindings>
        <CommandBinding Command="Undo" Executed="UndoExecuted" CanExecute="UndoCanExecute"/>
        <CommandBinding Command="Redo" Executed="RedoExecuted" CanExecute="RedoCanExecute"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0">
            <TextBlock DockPanel.Dock="Left" Text="Users" FontSize="18px" FontFamily="Segoe UI Light"
                       Margin="20"/>
            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="20">
                <Button Style="{StaticResource Btn.CommandIcon}"
                        Content="&#59303;" ToolTip="Undo"
                        Command="Undo"/>
                <Button Style="{StaticResource Btn.CommandIcon}"
                        Content="&#59302;" 
                        ToolTip="Redo"
                        Command="Redo"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="20"
                        DockPanel.Dock="Right" HorizontalAlignment="Right">
                <Button Style="{StaticResource Btn.CommandIcon}" 
                        Click="AddUserBtn_Click" ToolTip="Add user"
                        Content="&#59152;"/>
                <Button Style="{StaticResource Btn.ToolCommand}" 
                        CommandParameter="{Binding SelectedUser}"
                        Command="{Binding Commands.Duplicate}"
                        ToolTip="Duplicate user"
                        Content="2x" FontSize="16px"/>
                <Button Style="{StaticResource Btn.CommandIcon}" 
                        CommandParameter="{Binding SelectedUser}"
                        Command="{Binding Commands.Remove}"
                        ToolTip="Remove user"
                    Content="&#59153;" />
            </StackPanel>
        </DockPanel>

        <ListBox x:Name="usersLV" ItemsSource="{Binding Users}"
                 Grid.Row="1" Margin="20,0" BorderThickness="0,1,0,0"
                 SelectedItem="{Binding SelectedUser, Mode=TwoWay}"
                 Validation.ErrorTemplate="{x:Null}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Margin="10">
                        <TextBlock FontSize="16px" FontFamily="Segoe UI Semilight">
                            <Run Text="{Binding FullName, Mode=OneWay}"/> - <Run Text="{Binding Age, Mode=OneWay}"/> years old
                        </TextBlock >
                        <TextBlock Text="{Binding Email}" FontSize="13px" FontFamily="Segoe UI Semibold"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <ItemsControl ItemsSource="{Binding UsersErrors}" Background="DarkRed"
                      Grid.Row="2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock x:Name="msg" Text="{Binding Message}" Padding="10,5" Foreground="White"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Kind}" Value="{x:Static validation:ValidationKind.Error}" >
                            <Setter TargetName="msg" Property="Background" Value="DarkRed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Kind}" Value="{x:Static validation:ValidationKind.Warning}" >
                            <Setter TargetName="msg" Property="Background" Value="OrangeRed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Kind}" Value="{x:Static validation:ValidationKind.Information}" >
                            <Setter TargetName="msg" Property="Background" Value="CornflowerBlue"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>
